#!/bin/bash

prune_flag=off
src_branch=""
dest_branch=""

function exit_with_err() {
	echo "Error performing operation. Exiting."
	if [ $1 ]; then
		exit $1
	else
		exit 1
	fi
}

function usage() {
	echo "usage: mergepr [--no-prune] <src> <dest>"
}

if [ "$#" -lt 2 ] || [ "$#" -gt 3 ]; then
	usage
	exit
fi

while :
do
	case "$1" in
		-h | -help )
			usage
			exit 0
			;;
		--no-prune )
			prune_flag=on
			shift
			;;
		-* )
			usage
			exit 0
			;;
		* )
			if [ -z $src_branch ]; then
				src_branch="$1"
				shift
			elif [ -z $dest_branch ]; then
				if [ -n "$1" ]; then
					dest_branch="$1"
					shift
				else
					usage
					exit 0
				fi
			else
				break
			fi
	esac
done

current_branch="$(git symbolic-ref --short HEAD)"
stash_output="$(git stash save)"

git fetch -q --prune || exit_with_err
git checkout -q --detach origin/$dest_branch || exit_with_err 3

merge_message="Merge remote-tracking branch 'origin/$src_branch' into $dest_branch"

git merge -S --no-ff -m "$merge_message" origin/$src_branch || exit_with_err 4
git push -q origin HEAD:$dest_branch

if [ "$prune_flag" = off ]; then
	git push -q origin :$src_branch || exit_with_err
	git branch -d $src_branch || exit_with_err
fi

git checkout -q $current_branch || exit_with_err 8

if [ "$stash_output" != "No local changes to save" ]; then
	git stash pop || exit_with_err
fi

exit 0
